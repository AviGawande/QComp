    import QtQuick 2.15
    import QtQuick.Controls 2.15
    import QtQuick.Layouts 1.15
    import QtQuick.Controls.Material 2.15
    
    Rectangle {
        id: mainContainer
        width: parent.width
        height: colLayout.implicitHeight + 20
        color: "transparent"
        visible: true
    
        Rectangle {
            anchors.fill: parent
            color: "#ffffff"
            opacity: 0.20
            radius: 8
        }
    
        // Reference to ShipManager
        property var shipManager: null
    
        // State management
        property int expandedRecommendedIndex: -1
        property int expandedOtherIndex: -1
        property bool otherSolutionsExpanded: false
    
        ColumnLayout {
            id: colLayout
            anchors.margins: 15
            anchors.fill: parent
            spacing: 10
    
            // Top Recommended Header
            Rectangle {
                Layout.fillWidth: true
                height: 35
                color: "transparent"
    
                Rectangle {
                    anchors.fill: parent
                    color: "#ffce00"
                    opacity: 0.15
                    radius: 6
                }
    
                RowLayout {
                    anchors.centerIn: parent
                    spacing: 8
    
                    // SVG Star Icon
                    Item {
                        width: 20
                        height: 20
    
                        Canvas {
                            anchors.fill: parent
                            onPaint: {
                                var ctx = getContext("2d");
                                ctx.fillStyle = "#ffd700";
                                ctx.beginPath();
                                // Star path
                                ctx.moveTo(10, 2);
                                ctx.lineTo(12.5, 7.5);
                                ctx.lineTo(18, 7.5);
                                ctx.lineTo(14, 11.5);
                                ctx.lineTo(16, 18);
                                ctx.lineTo(10, 14.5);
                                ctx.lineTo(4, 18);
                                ctx.lineTo(6, 11.5);
                                ctx.lineTo(2, 7.5);
                                ctx.lineTo(7.5, 7.5);
                                ctx.closePath();
                                ctx.fill();
                            }
                        }
                    }
    
                    Label {
                        text: "TOP RECOMMENDED"
                        font.pointSize: 12
                        color: "#b8860b"
                        font.bold: true
                    }
                }
            }
    
            // Top Recommended Ships Row
            Rectangle {
                Layout.fillWidth: true
                height: 120
                color: "transparent"
    
                ScrollView {
                    anchors.fill: parent
                    clip: true
    
                    RowLayout {
                        spacing: 15
                        height: parent.height
    
                        Repeater {
                            model: shipManager ? shipManager.recommendedShips : []
                            delegate: ShipCard {
                                shipData: modelData
                                cardIndex: index
                                isExpanded: expandedRecommendedIndex === index
                                isRecommended: true
    
                                onCardClicked: {
                                    expandedRecommendedIndex = (expandedRecommendedIndex === index) ? -1 : index
                                    expandedOtherIndex = -1
                                    otherSolutionsExpanded = false
                                }
                            }
                        }
                    }
                }
            }
    
            // Details section for recommended ships
            Rectangle {
                Layout.fillWidth: true
                height: expandedRecommendedIndex >= 0 ? 120 : 0
                color: "#f8f9fa"
                visible: height > 0
                border.color: "#dee2e6"
                border.width: 1
                radius: 6
                clip: true
    
                Behavior on height {
                    NumberAnimation { duration: 300; easing.type: Easing.OutCubic }
                }
    
                ShipDetailsView {
                    anchors.fill: parent
                    anchors.margins: 15
                    shipData: (shipManager && expandedRecommendedIndex >= 0 && expandedRecommendedIndex < shipManager.recommendedShips.length) ?
                             shipManager.recommendedShips[expandedRecommendedIndex] : null
                }
            }
    
            // Other Solutions Header
            Rectangle {
                Layout.fillWidth: true
                Layout.topMargin: 10
                height: 45
                color: otherSolutionsExpanded ? "#e3f2fd" : "#f5f5f5"
                border.color: "#ccc"
                border.width: 1
                radius: 6
    
                MouseArea {
                    anchors.fill: parent
                    hoverEnabled: true
                    cursorShape: Qt.PointingHandCursor
    
                    onClicked: {
                        otherSolutionsExpanded = !otherSolutionsExpanded
                        if (otherSolutionsExpanded) {
                            expandedRecommendedIndex = -1
                        } else {
                            expandedOtherIndex = -1
                        }
                    }
    
                    onEntered: parent.color = otherSolutionsExpanded ? "#bbdefb" : "#eeeeee"
                    onExited: parent.color = otherSolutionsExpanded ? "#e3f2fd" : "#f5f5f5"
                }
    
                RowLayout {
                    anchors.fill: parent
                    anchors.margins: 15
                    spacing: 10
    
                    Label {
                        text: "OTHER SOLUTIONS"
                        font.pointSize: 11
                        font.bold: true
                        color: "#333"
                        Layout.fillWidth: true
                    }
    
                    Label {
                        text: shipManager ? `(${shipManager.otherCount} ships)` : "(0 ships)"
                        font.pointSize: 9
                        color: "#666"
                    }
    
                    // Arrow SVG Icon
                    Item {
                        width: 16
                        height: 16
    
                        Canvas {
                            anchors.fill: parent
                            onPaint: {
                                var ctx = getContext("2d");
                                ctx.strokeStyle = "#666";
                                ctx.lineWidth = 2;
                                ctx.lineCap = "round";
                                ctx.lineJoin = "round";
                                ctx.beginPath();
                                if (otherSolutionsExpanded) {
                                    // Up arrow
                                    ctx.moveTo(4, 10);
                                    ctx.lineTo(8, 6);
                                    ctx.lineTo(12, 10);
                                } else {
                                    // Down arrow
                                    ctx.moveTo(4, 6);
                                    ctx.lineTo(8, 10);
                                    ctx.lineTo(12, 6);
                                }
                                ctx.stroke();
                            }
                        }
                    }
                }
            }
    
            // Other Solutions Content
            Rectangle {
                Layout.fillWidth: true
                height: otherSolutionsExpanded ? Math.min(400, otherSolutionsContent.implicitHeight + 20) : 0
                color: "white"
                visible: height > 0
                border.color: "#e0e0e0"
                border.width: 1
                radius: 6
                clip: true
    
                Behavior on height {
                    NumberAnimation { duration: 400; easing.type: Easing.OutCubic }
                }
    
                ScrollView {
                    id: otherSolutionsContent
                    anchors.fill: parent
                    anchors.margins: 15
                    clip: true
    
                    GridLayout {
                        width: otherSolutionsContent.width - 30
                        columns: Math.max(1, Math.floor(width / 160))
                        columnSpacing: 15
                        rowSpacing: 15
    
                        Repeater {
                            model: shipManager ? shipManager.otherShips : []
                            delegate: ShipCard {
                                shipData: modelData
                                cardIndex: index
                                isExpanded: expandedOtherIndex === index
                                isRecommended: false
                                Layout.preferredWidth: 150
    
                                onCardClicked: {
                                    expandedOtherIndex = (expandedOtherIndex === index) ? -1 : index
                                    expandedRecommendedIndex = -1
                                }
                            }
                        }
                    }
                }
            }
    
            // Details section for other solutions - FIXED
            Rectangle {
                Layout.fillWidth: true
                height: (expandedOtherIndex >= 0 && otherSolutionsExpanded) ? 120 : 0
                color: "#f8f9fa"
                visible: height > 0
                border.color: "#dee2e6"
                border.width: 1
                radius: 6
                clip: true
    
                Behavior on height {
                    NumberAnimation { duration: 300; easing.type: Easing.OutCubic }
                }
    
                ShipDetailsView {
                    anchors.fill: parent
                    anchors.margins: 15
                    // FIXED: Use otherShips array and correct index bounds checking
                    shipData: (shipManager && expandedOtherIndex >= 0 && expandedOtherIndex < shipManager.otherShips.length) ?
                             shipManager.otherShips[expandedOtherIndex] : null
                }
            }
        }
    
        // Ship Card Component
        component ShipCard: Rectangle {
            id: cardRoot
            property var shipData: null
            property int cardIndex: -1
            property bool isExpanded: false
            property bool isRecommended: false
    
            signal cardClicked()
    
            height: 100
            width: 150
            color: "white"
            radius: 8
            border.width: 2
            border.color: {
                if (isExpanded) return "#007bff"
                if (isRecommended) return "#ffd700"
                return "#e0e0e0"
            }
    
            // Shadow effect
            Rectangle {
                anchors.fill: parent
                anchors.margins: 2
                color: "transparent"
                border.color: "#00000020"
                border.width: 1
                radius: 8
                z: -1
            }
    
            ColumnLayout {
                anchors.fill: parent
                anchors.margins: 10
                spacing: 5
    
                // Ship SVG Icon Area
                Rectangle {
                    Layout.fillWidth: true
                    Layout.preferredHeight: 50
                    color: "transparent"
    
                    // Ship SVG Icon
                    Item {
                        anchors.centerIn: parent
                        width: 40
                        height: 30
                        opacity: isRecommended ? 1.0 : 0.7
    
                        Canvas {
                            anchors.fill: parent
                            onPaint: {
                                var ctx = getContext("2d");
                                ctx.fillStyle = isRecommended ? "#007bff" : "#6c757d";
                                ctx.strokeStyle = isRecommended ? "#0056b3" : "#495057";
                                ctx.lineWidth = 1;
    
                                // Ship hull
                                ctx.beginPath();
                                ctx.moveTo(5, 20);
                                ctx.lineTo(35, 20);
                                ctx.lineTo(32, 25);
                                ctx.lineTo(8, 25);
                                ctx.closePath();
                                ctx.fill();
                                ctx.stroke();
    
                                // Ship deck
                                ctx.fillRect(10, 15, 20, 5);
                                ctx.strokeRect(10, 15, 20, 5);
    
                                // Mast
                                ctx.beginPath();
                                ctx.moveTo(20, 15);
                                ctx.lineTo(20, 5);
                                ctx.stroke();
    
                                // Flag
                                ctx.fillStyle = "#dc3545";
                                ctx.fillRect(20, 5, 8, 5);
                            }
                        }
                    }
    
                    // Recommended star badge
                    Rectangle {
                        visible: isRecommended
                        anchors.top: parent.top
                        anchors.right: parent.right
                        width: 20
                        height: 20
                        color: "#ffd700"
                        radius: 10
    
                        Canvas {
                            anchors.fill: parent
                            anchors.margins: 3
                            onPaint: {
                                var ctx = getContext("2d");
                                ctx.fillStyle = "white";
                                ctx.beginPath();
                                // Small star
                                var cx = width/2, cy = height/2, r = 5;
                                for(var i = 0; i < 5; i++) {
                                    var angle = (i * 144 - 90) * Math.PI / 180;
                                    var x = cx + r * Math.cos(angle);
                                    var y = cy + r * Math.sin(angle);
                                    if(i === 0) ctx.moveTo(x, y);
                                    else ctx.lineTo(x, y);
                                }
                                ctx.closePath();
                                ctx.fill();
                            }
                        }
                    }
                }
    
                // Ship Name
                Label {
                    text: shipData ? shipData.title : "Unknown"
                    font.pointSize: 9
                    font.bold: true
                    color: "#333"
                    Layout.fillWidth: true
                    horizontalAlignment: Text.AlignHCenter
                    elide: Text.ElideRight
                }
    
                // Configuration Level Badge
                Rectangle {
                    Layout.alignment: Qt.AlignHCenter
                    height: 18
                    width: configText.implicitWidth + 12
                    color: getConfigColor(shipData ? shipData.configureLevel : "0")
                    radius: 9
    
                    Label {
                        id: configText
                        anchors.centerIn: parent
                        text: shipData ? shipData.configureLevel + "%" : "0%"
                        font.pointSize: 8
                        color: "white"
                        font.bold: true
                    }
                }
            }
    
            MouseArea {
                anchors.fill: parent
                hoverEnabled: true
                cursorShape: Qt.PointingHandCursor
    
                onClicked: {
                    console.log("Clicked:", shipData ? shipData.title : "Unknown")
                    cardRoot.cardClicked()
                }
    
                onEntered: {
                    cardRoot.scale = 1.05
                }
    
                onExited: {
                    cardRoot.scale = 1.0
                }
            }
    
            Behavior on scale {
                NumberAnimation { duration: 150 }
            }
    
            Behavior on border.color {
                ColorAnimation { duration: 200 }
            }
    
            function getConfigColor(level) {
                var num = parseInt(level)
                if (num >= 80) return "#28a745"
                if (num >= 60) return "#fd7e14"
                if (num >= 40) return "#ffc107"
                return "#dc3545"
            }
        }
    
        // Ship Details Component
        component ShipDetailsView: RowLayout {
            property var shipData: null
            spacing: 20
    
            DetailColumn {
                icon: "classification"
                label: "Classification"
                value: shipData ? shipData.classification : "N/A"
            }
    
            DetailColumn {
                icon: "anchor"
                label: "SubType"
                value: shipData ? shipData.subType : "N/A"
            }
    
            DetailColumn {
                icon: "globe"
                label: "Nationality"
                value: shipData ? shipData.nationality : "N/A"
            }
    
            // Configuration with progress bar
            ColumnLayout {
                spacing: 5
                Layout.preferredWidth: 180
    
                RowLayout {
                    spacing: 8
    
                    // Settings/Gear SVG Icon
                    Item {
                        width: 16
                        height: 16
    
                        Canvas {
                            anchors.fill: parent
                            onPaint: {
                                var ctx = getContext("2d");
                                ctx.fillStyle = "#666";
                                ctx.strokeStyle = "#666";
                                ctx.lineWidth = 1;
    
                                // Gear shape
                                ctx.beginPath();
                                ctx.arc(8, 8, 6, 0, 2 * Math.PI);
                                ctx.stroke();
                                ctx.beginPath();
                                ctx.arc(8, 8, 3, 0, 2 * Math.PI);
                                ctx.fill();
    
                                // Gear teeth
                                for(var i = 0; i < 8; i++) {
                                    var angle = i * Math.PI / 4;
                                    var x1 = 8 + 6 * Math.cos(angle);
                                    var y1 = 8 + 6 * Math.sin(angle);
                                    var x2 = 8 + 8 * Math.cos(angle);
                                    var y2 = 8 + 8 * Math.sin(angle);
                                    ctx.beginPath();
                                    ctx.moveTo(x1, y1);
                                    ctx.lineTo(x2, y2);
                                    ctx.stroke();
                                }
                            }
                        }
                    }
    
                    Label {
                        text: "Configure Level"
                        color: "#666"
                        font.pointSize: 10
                        font.bold: true
                    }
                }
    
                RowLayout {
                    spacing: 10
                    Layout.fillWidth: true
    
                    Label {
                        text: shipData ? shipData.configureLevel + "%" : "0%"
                        color: "#333"
                        font.pointSize: 12
                        font.bold: true
                        Layout.preferredWidth: 45
                    }
    
                    Rectangle {
                        Layout.fillWidth: true
                        height: 10
                        color: "#e9ecef"
                        radius: 5
    
                        Rectangle {
                            height: parent.height
                            width: parent.width * (shipData ? parseInt(shipData.configureLevel) / 100 : 0)
                            color: getProgressColor(shipData ? shipData.configureLevel : "0")
                            radius: 5
    
                            Behavior on width {
                                NumberAnimation { duration: 500; easing.type: Easing.OutCubic }
                            }
                        }
                    }
                }
            }
    
            function getProgressColor(level) {
                var num = parseInt(level)
                if (num >= 80) return "#28a745"
                if (num >= 60) return "#fd7e14"
                if (num >= 40) return "#ffc107"
                return "#dc3545"
            }
        }
    
        // Detail Column Component
        component DetailColumn: ColumnLayout {
            property string label: ""
            property string value: ""
    
            spacing: 5
            Layout.preferredWidth: 120
    
            Label {
                text: label
                color: "#666"
                font.pointSize: 10
                font.bold: true
            }
    
            Label {
                text: value
                color: "#333"
                font.pointSize: 12
                font.bold: true
                Layout.fillWidth: true
                wrapMode: Text.WordWrap
            }
        }
    }
